name: Build and Deploy to Pypi

on:
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:  
  build-linux-amd64:
    name: Build Linux Shared Library
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build shared library for Linux
        working-directory: sharedlib
        run: |
          go build -buildmode=c-shared -o libprismaid_linux_amd64.so export.go

      - name: Upload Linux shared library artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd64-shared-library
          path: sharedlib/libprismaid_linux_amd64.so

  build-windows-amd64:
    name: Build Windows Shared Library
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build shared library for Windows
        working-directory: sharedlib
        shell: pwsh
        run: |
          go build -buildmode=c-shared -o libprismaid_windows_amd64.dll .\export.go

      - name: Upload Windows shared library artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-amd64-shared-library
          path: sharedlib/libprismaid_windows_amd64.dll
      
  build-macos-arm64:
    name: Build macOS Arm64 Shared Library
    runs-on: macos-latest
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build shared library for macOS
        working-directory: sharedlib
        run: |
          go build -buildmode=c-shared -o libprismaid_darwin_arm64.dylib export.go

      - name: Upload macOS shared library artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-shared-library
          path: sharedlib/libprismaid_darwin_arm64.dylib
          
  package-python:
    name: Package Python Project with All Shared Libraries
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-windows-amd64, build-macos-arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Copy files for Build
        run: |
          cp README.md python/README.md
          cp LICENSE python/LICENSE   
                 
      # Download artifacts from build jobs
      - name: Download macOS shared library artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-arm64-shared-library
          path: python/prismaid/

      - name: Download Linux shared library artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-amd64-shared-library
          path: python/prismaid/

      - name: Download Windows shared library artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-amd64-shared-library
          path: python/prismaid/

      - name: Install build tools
        working-directory: ./python
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Build Python package
        working-directory: ./python
        run: |
          python -m build

      - name: Upload Python Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: prismaid-python-package
          path: python/dist/*.whl

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    needs: package-python  # Ensure it waits for the packaging job
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Python Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: prismaid-python-package
          path: dist/

      - name: Install Twine and pkginfo
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade twine pkginfo

      - name: Publish distribution to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: "${{ secrets.PYPY_API_TOKEN }}"
        run: |
          twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
        with:
          verbose: true
